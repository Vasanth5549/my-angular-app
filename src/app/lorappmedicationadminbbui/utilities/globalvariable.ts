import { Component, OnInit } from '@angular/core';
import { StringBuilder,ProfileFactoryType,ContextManager,Convert,AppActivity} from 'epma-platform/services';
import { Level, ProfileContext, OnProfileResult, IProfileProp,Byte, Decimal, decimal, Double, Float, Int64, long, Long, StringComparison,AppDialogEventargs, AppDialogResult, DelegateArgs, DialogComponentArgs, WindowButtonType, ObservableCollection, CListItem, List } from 'epma-platform/models';
import { AppDialog, Color } from 'epma-platform/controls';
import { HelperService} from 'epma-platform/soapclient';
import 'epma-platform/stringextension';
import DateTime from 'epma-platform/DateTime';
import TimeSpan from 'epma-platform/TimeSpan';
import { MessageEventArgs, MessageBoxResult, iMessageBox, MessageBoxButton, MessageBoxType, MessageBoxDelegate } from 'epma-platform/services';
import { ObjectHelper } from 'epma-platform/helper';
import { CValuesetTerm } from 'src/app/shared/epma-platform/soap-client/CReferenceWS';
import { Dictionary } from 'epma-platform/dictionary';
import { MultiRouteType } from './CConstants';
import { EventsWithNotKnownStatus, PatientObservationData } from './common';
import { PrescriptionItemViewVM } from '../viewmodel/PrescriptionItemViewVM';
import { ArrayOfString, Encounter, InfChartAlertInfo } from 'src/app/shared/epma-platform/soap-client/MedicationAdministrationWS';
import { MedicationAdminVM } from '../ca/medicationadmin/medicationadminvm';
  
    export class TagDrugHeaderDetail {
        public PrescriptionItemStatus: string;
        public PreviousPrescriptionItemStatus: string;
        public DoseType: string;
        public LowerDose: string;
        public UpperDose: string;
        public DoseUOM: string;
        public StrengthText: string;
        public DoseUOMOID: number;
        public DoseUOMLzoID: string;
        public IsPGD: boolean;
        public DrugIdentifyingOID: number;
        public DrugIdentifyingType: string;
        public MCVersionNo: string;
        public AdminMethod: string;
        public RouteOID: number;
        public StartDate: DateTime;
        public EndDate: DateTime;
        public DosageFormOID: number;
        public LorenzoID: string;
        public IsParacetamolIngredient: boolean;
        public DrugName: string;
        public SlotsTimeIntervalAvg: number;
        public IsPRN: boolean;
        public IsNextDoseAllowedForPRN: boolean;
        public MinimumIntervalForPRN: number;
        public LastAdministeredAtForPRN: DateTime;
        public UnackIsConflictExists: string;
        public ProductForm: string;
        public ItemType: string;
        public ItemSubType: string;
        public MultiComponentItems: ArrayOfString;
        public EncounterOID: number;
        public EncounterType: string;
        public DueSlotCount: number;
        public OverdueSlotCount: number;
        public IsAllowAdvanceAdmin: boolean;
        public FreqPerodcode: string;
        public INFTYCODE: string;
        public Fluid: string;
        public Concentration: number;
        public BoosterDose: string;
        public BoosterDoseUOM: string;
        public Rate: string;
        public UpperRate: string;
        public RateNumeratorUOM: string;
        public RateDinominatorUOM: string;
        public BackgroundRate: string;
        public BackgroundRateNumeratorUOM: string;
        public BackgroundRateDinominatorUOM: string;
        public Duration: number;
        public DurationUOM: string;
        public Volume: string;
        public VolumeUOM: string;
        public VolumeUOMOID: number;
        public InfusionPeriod: string;
        public InfusionPeriodUOM: string;
        public LockOutPeriod: string;
        public LockOutPeriodUOM: string;
        public MaxDose: string;
        public Lumen: string;
        public DeliveryDevice: string;
        public PreparationStatusCode: string;
        public IsInfusion: boolean;
        public IsOnGoing: string;
        public RateNumeratorUOMOID: number;
        public RateDinominatorUOMOID: number;
        public InfusionPeriodUOMOID: number;
        public BackgroundRateUOMOID: number;
        public BoosterDoseUOMOID: number;
        public IsControlDrug: boolean;
        public IsFluidControlDrug: boolean;
        public InfChartAlerts: ArrayOfString;
        public PreviousRate: string;
        public PreviousDrugConcentration: string;
        public PrescriptionItemOID: number;
        public InfusionRecordAdminTypeCode: number;
        public AmendedPrescriptionItemOID: number;
        public AmendedParentPrescriptionItemOID: number;
        public PrescribedBy: string;
        public PrescribedAt: DateTime;
        public SequentialPrescriptionItemOID: number;
        public Routeoids: string;
        public SupplyComments: string;
        public SupplyInstructions: string;
        public ReviewDTTM: DateTime;
        public ReviewRequestedComments: string;
        public ReviewType: string;
        public ReviewRequestedby: string;
        public IsIndefiniteOmit: boolean;
        public IndefiniteOmitFromDTTM: DateTime;
        public OmitComments: string;
        public Omittedby: string;
        public LastOmittedSlotDTTM: DateTime;
        public ParentPrescriptionItemOID: number;
        public InfusionSeqOrder: number;
        public InfusionGroupSequenceNo: number;
        public DrugConcentration: string;
        public CancelDiscontinuedBy: string;
        public CancelDiscontinuedDttm: DateTime;
        public IsPRNWithSchedule: boolean;
        public IsConditionalExists: boolean;
        public MultiRoute_Type: MultiRouteType;
        public InfInProgressSlotDTTM: DateTime;
        public PrescriptionItemParentChildDetails: PresItemParentChildDetail;
        public DrugFrequencyOID: number;
        public Route: string;
        public InfusionType: string;
        public IsBolus: boolean;
        public IsPatientSelfAdmin: boolean;
        public PrescribingNote: string;
        public IsAllowedToPerform: boolean;
        public SequenceParentPrescItemOID: number;
        public SeqInfOrderForPervImmediateItm: number;
        public OrderSetName: string;
        public IsAmendCompletedStatus: boolean;
        public IsMedScanExcluded: boolean;
        public IsCustomiseMedScan: boolean;
    }
    export class TagSlotDetail {
        public SlotOID: number;
        public SlotStatus: string;
        public Dose: string;
        public LowerDose: string;
        public UpperDose: string;
        public DoseUOM: string;
        public DoseUOMOID: number;
        public DoseUOMLzoID: string;
        public MedsAdminOID: number = 0;
        public PrescriptionItemOID: number;
        public IsNextDoseAllowedForPRN: boolean;
        public MinimumIntervalForPRN: number;
        public LastAdministeredAtForPRN: DateTime;
        public AdministeredAt: DateTime;
        public SlotDateTime: DateTime;
        public LastModifiedAt: DateTime;
        public IsPRN: Boolean;
        public AdminReasonCode: string;
        public Comments: string;
        public IsSelfAdministered: boolean;
        public RecordedAt: DateTime;
        public RecordedBy: string;
        public IsLastSlotInView: boolean;
        public IsInfusion: boolean;
        public INFTYCODE: string;
        public IsBolus: boolean;
        public FirstBagBegunAt: DateTime;
        public LastBagEndedAt: DateTime;
        public TotalVolumeInfused: string;
        public TotalVolumeInfusedUOMName: string;
        public CurrentBagVolumeInfused: string;
        public CurrentBagVolumeInfusedUOMName: string;
        public IsAllowAdvanceAdminSlot: boolean;
        public Routeoids: string;
        public IsAdministeredOnInfusionChart: boolean;
        public IsHighlightSlot: boolean;
        public InfusionRate: string;
        public InfusionUpperRate: string;
        public InfusionRateUOM: string;
        public InfusionRatePerUOM: string;
        public IsDuringHomeLeave: boolean;
    }
    export class MedChartData {
        public static LocationOID: number;
        public static bAllowStockRequestByNurse: boolean;
        public static AllowAnyUserForAdministration: boolean;
        public static Is7DayView: boolean = false;
        public static MedChartOID: number;
        public static ServiceOID: number;
        public static ChartStatus: string;
        public static ActiveFrom: DateTime;
        public static ActiveTo: DateTime;
        public static SuspendedOn: DateTime;
        public static LastUpdateDTTM: DateTime;
        public static PrescriptionItemScheduleOID: number;
        public static AsRequiredSlotsColor: Color;
        public static DueSlotsColor: Color;
        public static OmittedSlotsColor: Color;
        public static OverDueSlotsColor: Color;
        public static TodayOutlineColor: Color;
        public static AdvDurationForRecording: number = 0;
        public static AllowAdvanceDuration: number = 336;
        public static IsAuthoriseDrugAval: boolean;
        public static DuenessThreshold: number = 0;
        public static SlotModificationTime: number = 0;
        public static AdminIVAlertInHrs: number = 0;
        public static sPatinetInfo: string = String.Empty;
        public static PatinetInfo: PatientObservationData;
        public static sPatinetEncounterInfo: string = String.Empty;
        public static IsDischargePrescriptionExists: boolean = false;
        public static IsMedChartReadOnly: boolean = false;
        public static oPrescriptionItemViewVM: PrescriptionItemViewVM;
        public static MedEncounter: ObservableCollection<Encounter> = new ObservableCollection<Encounter>();
        public static oMedAdminVM: MedicationAdminVM;
        public static IsLaunchFrmPrescribe: boolean = false;
        public static InfusionItemCount: number;
        public static NonInfusionItemCount: number;
        public static InfusionChartAlertInfo: InfChartAlertInfo;
        public static IsPresChartReadOnly: boolean = false;
        public static ListOfEventsWithNotKnownStatus: List<EventsWithNotKnownStatus>;
        public static bRequestMedicationEnable: boolean;
        public static bRequestMedicationVisible: boolean;
        public static RefreshTriggeredCACode: string = String.Empty;
        public static IsReloadChartReqFromReqMedCA: boolean = false;
        public static CalledFrom: string = String.Empty;
        public static IsReqMedCAlaunched: boolean = false;
        public static IsPatWBScanSuccess: boolean;
        public static IsMedScanSuccess: boolean;
        public static IsPatWBScanMandatory: boolean;
        public static IsMedScanMandatory: boolean;
        public static IsPatWBBarcodeScanOverriden: boolean;
        public static PatWBScanOverrideReason: string;
        public static PatWBScanOverrideComments: string;
        public static IsMedBarcodeScanOverriden: boolean;
        public static MedScanOverrideReason: string;
        public static MedScanOverrideComments: string;
    }
    export class MedChartDefaultData {
        public static LocationOID: number;
        public static MedChartOID: number;
        public static ServiceOID: number;
        public static ChartStatus: string;
        public static ActiveFrom: DateTime;
        public static ActiveTo: DateTime;
        public static SuspendedOn: DateTime;
        public static MergedPatientOID: number;
        public static EncounterStatus: string;
    }
    export class ChartContext {
        public static PatientOID: number;
        public static EncounterOID: number;
        public static EncounterType: string;
        public static DefaultDataPatientOID: number;
        public static DefaultDataEncounterOID: number;
        public static DefaultDataEncounterType: string;
        public static IsInfusionAlertsNotReviewed: boolean;
        public static CurrentUserName: string;
        public static CurrentChartTab: string;
        public static MedchartLaunchLoc: string;
        public static ChartLaunchDTTM: DateTime;
        public static IsPrescribeLaunchFromChart : boolean = false;
    }
    export class WebServiceURL {
        public static QueryCareEventsWS: string;
        public static ManagePrescriptionWS: string;
        public static PrescribableDefnnWS: string;
        public static ManageCBCFormsWS: string;
        public static ResultManagementWS: string;
    }
    export class ValueDomainValues {
        public static oPrescriptionItemStatus: ObservableCollection<CValuesetTerm>;
        public static oDoseType: ObservableCollection<CValuesetTerm>;
        public static oSlotStatus: ObservableCollection<CValuesetTerm>;
        public static oChartStatus: ObservableCollection<CValuesetTerm>;
        public static oRecordAdminReasons: ObservableCollection<CValuesetTerm>;
        public static oRecordAdminDoseDiscrepancyReasons: ObservableCollection<CValuesetTerm>;
        public static MedicationClerking: ObservableCollection<CValuesetTerm>;
        public static BSAFormula: ObservableCollection<CValuesetTerm>;
        public static oIPPMAPrscTy: ObservableCollection<CValuesetTerm>;
        public static oMedSite: ObservableCollection<CValuesetTerm>;
        public static oMedAdmnMthd: ObservableCollection<CValuesetTerm>;
        public static oResnForMod: ObservableCollection<CValuesetTerm>;
        public static oMedSupp: ObservableCollection<CValuesetTerm>;
        public static oMedSupplyStatus: ObservableCollection<CValuesetTerm>;
        public static oMedDoseForm: ObservableCollection<CValuesetTerm>;
        public static oMedTreatCont: ObservableCollection<CValuesetTerm>;
        public static oEncTyp: ObservableCollection<CValuesetTerm>;
        public static oENCSTATUSVALUEDOMAINCODE: ObservableCollection<CValuesetTerm>;
        public static oReasonForNotGiven: Dictionary<string, number>;
        public static oDurationUOM: ObservableCollection<CValuesetTerm>;
        public static oHumidification: ObservableCollection<CValuesetTerm>;
        public static UrgencyDomain: ObservableCollection<CListItem>;
        public static ScanPatWBOverrideReasons: ObservableCollection<CListItem>;
        public static ScanMedOverrideReasons: ObservableCollection<CListItem>;
    }
    export class PresItemParentChildDetail {
        public IsDetailsAlreadyRetreived: boolean;
        public ChildPrescriptionItemOID: number;
        public FirstScheduleOID: number;
        public LastScheduleOID: number;
        public ParentPrescriptionItemOID: number;
    }
